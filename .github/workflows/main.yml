name: CI Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push and pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main, refactoring]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  run_tests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install full package
        run: |
          python -m venv venv
          . ./venv/bin/activate
          pip install --upgrade pip wheel poetry==1.5.1 lightfm==1.17

          poetry cache clear pypi --all
          ./poetry_wrapper.sh --experimental install --all-extras
      - name: pycodestyle
        run: |
          . ./venv/bin/activate
          pycodestyle replay tests
      - name: pylint
        run: |
          . ./venv/bin/activate
          pylint replay
      - name: pytest
        run: |
          . ./venv/bin/activate
          pytest

  build_production:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install production package
        run: |
          python -m venv venv
          . ./venv/bin/activate
          pip install --upgrade pip wheel poetry==1.5.1 poetry-dynamic-versioning

          poetry cache clear pypi --all
          ./poetry_wrapper.sh install --all-extras

      - name: Build
        run: |
          . ./venv/bin/activate
          export PACKAGE_SUFFIX=.dev
          ./poetry_wrapper.sh --generate
          poetry build

  build_experimental:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install full package
        run: |
          python -m venv venv
          . ./venv/bin/activate
          pip install --upgrade pip wheel poetry==1.5.1 poetry-dynamic-versioning lightfm==1.17

          poetry cache clear pypi --all
          ./poetry_wrapper.sh --experimental install --all-extras

      - name: Build
        run: |
          . ./venv/bin/activate
          export PACKAGE_SUFFIX=.preview
          ./poetry_wrapper.sh --experimental --generate
          poetry build